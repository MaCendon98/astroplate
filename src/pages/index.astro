---
import ImageMod from "@/components/ImageMod.astro";
import Base from "@/layouts/Base.astro";
import { getListPage, getSinglePage } from "@/lib/contentParser.astro";
import { supportedLang } from "@/lib/utils/languageParser";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import Contact from "@/partials/Contact.astro";
import Testimonial from "@/partials/Testimonial.astro";
import type { Feature, About } from "@/types";
import type { ContentEntryMap } from "astro:content";

export function getStaticPaths() {
  const paths = supportedLang.map((lang) => ({
    params: { lang: lang || undefined },
  }));
  return paths;
}

const { lang } = Astro.params;
const homepage = await getListPage("homepage", lang as keyof ContentEntryMap);
const { banner, features, abouts } = homepage[0].data;

const testimonial = await getSinglePage(
  "sections",
  lang as keyof ContentEntryMap,
  "testimonial",
);

const call_to_action = await getSinglePage(
  "sections",
  lang as keyof ContentEntryMap,
  "call-to-action",
);

const contact = await getSinglePage(
  "sections",
  lang as keyof ContentEntryMap,
  "contact"
);

---

<Base>
  <!-- Banner -->
  <section class="section lg:pt-32">
    <div class="container">
      <div class="row justify-center">
        <div class="mb-10 md:mb-20 text-left">
          <h1
            set:html={markdownify(banner.title)}
            class="mb-6 lg:text-6xl text-4xl text-left"
          />
          <p set:html={markdownify(banner.content)} class="mb-8 text-lg lg:text-xl text-left" />
          {
            banner.button.enable && (
              <a
                class="btn btn-primary"
                href={banner.button.link}
                target={
                  banner.button.link.startsWith("http") ? "_blank" : "_self"
                }
                rel="noopener"
              >
                {banner.button.label}
              </a>
            )
          }
        </div>
        {
          banner.image && (
            <div class="col-12 p-0">
              <ImageMod
                src={banner.image}
                height={380}
                width={1200}
                alt="banner"
                format="webp"
              />
            </div>
          )
        }
      </div>
    </div>
  </section>
  <!-- /Banner -->

  <!-- About -->
  {
    abouts.map((about: About, index: number) => (
    <section class="section-sm" id="about">
      <div class="container">
        <div class="row items-center justify-between">
          <div class="md:col-7 lg:col-6 mb-20 md:mb-0">
            <p class="mb-6 text-sm text-primary font-semibold uppercase">{markdownify(about.tagline)}</p>
            <h2 class="mb-6">{markdownify(about.title)}</h2>
            <p class="mb-4">{markdownify(about.content1)}</p>
            <p class="mb-4">{markdownify(about.content2)}</p>
            {about.button.enable && (
                <a class="underline hover:no-underline mt-5" href={about.button.link} target="_blank">
                  {about.button.label}
                </a>
              )}
          </div>
          <div class="mb:md-0 mb-6 md:col-5">
            <div class="flex gap-10 mt-14 flex-col lg:flex-row">
                <div class="flex gap-4 flex-col">
                    <div class="h-60 w-full overflow-hidden">
                        <ImageMod
                        src={about.image1}
                        height={400}
                        width={400}
                        alt={about.name1}
                        format="jpeg"
                        class="object-cover h-full"
                        />
                    </div>
                    <div class="flex flex-col">
                        <p class="mb-1 text-left text-sm font-medium" set:html={markdownify(about.name1)} />
                        <p class="mb-0 text-left text-sm font-light" set:html={markdownify(about.detail1)} />
                    </div>
                </div>
                <div class="flex gap-4 flex-col">
                    <div class="h-60 w-full overflow-hidden">
                        <ImageMod
                            src={about.image2}
                            height={400}
                            width={400}
                            alt={about.name2}
                            format="webp"
                            class="object-cover h-full"
                        />
                    </div>
                    <div class="flex flex-col">
                        <p class="mb-1 text-left text-sm font-medium" set:html={markdownify(about.name2)} />
                        <p class="mb-0 text-left text-sm font-light" set:html={markdownify(about.detail2)} />
                    </div>
                </div>
              </div>
          </div>
        </div>
      </div>
    </section>
    ))
  }
  <!-- /About -->

  <!-- Features (Leistungen) -->
  <section class="section-sm">
  <div class="container">
    <div class="flex flex-col lg:flex-row gap-8">
      {
        features.map((feature: Feature, index: number) => (
          <div class="flex flex-col flex-1 p-6 lg:p-10 border">
            <div
              class="size-12 mb-6 lg:mb-10"
            >
              <ImageMod
                src={feature.image}
                height={40}
                width={40}
                alt={feature.title}
                format="svg"
              />
            </div>
            <div class="">
              <h3 set:html={markdownify(feature.title)} class="text-2xl mb-4 hyphens-auto" />
              <p set:html={markdownify(feature.content)} class="text-base" />
              {feature.button.enable && (
                <a class="btn btn-primary mt-5" href={feature.button.link}>
                  {feature.button.label}
                </a>
              )}
            </div>
          </div>
        ))
      }
    </div>
  </div>
  </section>
  <!-- /Features -->
  
  <!-- <CallToAction call_to_action={call_to_action[0]} /> -->
  <Testimonial testimonial={testimonial[0]} />
  <Contact contact={contact[0]} />
</Base>
